A51 MACRO ASSEMBLER  TEMPLATE_ADDER                                                       08/12/2019 15:18:34 PAGE     1


MACRO ASSEMBLER A51 V8.2.7.0
OBJECT MODULE PLACED IN .\Objects\template_adder.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE template_adder.asm SET(SMALL) DEBUG PRINT(.\Listings\template_adder.lst
                      ) OBJECT(.\Objects\template_adder.obj) EP

LOC  OBJ            LINE     SOURCE

0000                   1     ORG 0000H
                       2     ;-- The first opcode is burned into ROM address 0000H,
                       3     ;-- since this is where the 8051 looks for the first 
                       4     ;-- instruction when it is booted.
                       5     ;-- We achieve this by the ORG 00H statement in the source program
                       6     
0000 020200            7     LJMP MAIN
                       8     
                       9     ;R0 and R1 should contain the address of two no.
                      10     ;location given by R0:-         MSB of 1st no.
                      11     ;location given by R0+1:-       LSB of 1st no.
                      12     ;location given by R1:-         MSB of 1st no.
                      13     ;location given by R1+1:-       LSB of 1st no.
                      14     ;location given by R0+2:-       CARRY   
                      15     ;location given by R0+3:-       MSB OF ANS      
                      16     ;location given by R0+4:-       LSB OF ANS
                      17     
                      18     ;---------------------------------------------------------;
0050                  19     ORG 50H
                      20     ;this function adds and stores result in appropriate location
0050                  21     ADDER_16BIT:
                      22             
                      23             ;-- perform the addition/subtraction of two 16-bit no.
                      24             ;-- use subroutine written for addition of two 8-bit no.
                      25             ;-- remember the no. are given in 2's complement form
                      26             ;-- take care when you set carry/borrow.
                      27             ;-- store the result at appropriate locations.
0050 7970             28             MOV R1,#70H;set destination address 70H to R2
                      29             ;MOV R3,#71H;set carry address 71H to R3
0052 E550             30         MOV A,50H; take the value from source to register A
0054 FD               31         MOV R5,A; Move the value from A to R5
0055 7C00             32         MOV R4,#00H; Clear register R4 to store carry
                      33     ;INC R0,10;
0057 E560             34             MOV A,60H; take the value from source to register A
0059 2D               35             ADD A,R5; Add R5 with A and store to register A
005A 0C               36             INC R4; Increment R4 to get carry
005B 8CF0             37         MOV B,R4; Get carry to register B
005D                  38             JNC SAVE
*** _____________________________________^
*** ERROR #A45 IN 38 (template_adder.asm, LINE 38): UNDEFINED SYMBOL (PASS-2)
005F A7F0             39         MOV @R1,B; Store the carry first
0061 09               40             INC R1;
0062 F7               41             MOV @R1,A; Store the result 
                      42             
0063 22               43             RET     
                      44     ;-- end of subroutine ADDER_16BIT       
                      45     
                      46             
                      47     
0064                  48     INIT:
                      49             ;-- store the numbers to be added/subtracted at appropriate location
0064 755009           50             MOV 50H, #0x09
0067 7560F0           51             MOV 60H, #0xF0
006A 7850             52             MOV R0,#50H;set source address 50H to R0
006C 7B60             53         MOV R3,#60H;set address 60H to R1
                      54     
006E 22               55             RET
A51 MACRO ASSEMBLER  TEMPLATE_ADDER                                                       08/12/2019 15:18:34 PAGE     2

                      56     ;-- end of subroutine INIT
                      57     
                      58     
                      59     
0200                  60     ORG 0200H
0200                  61     MAIN:
0200 1164             62             ACALL INIT          ;-- calling a subroutine INIT
0202 1150             63             ACALL ADDER_16BIT   ;-- calling a subroutine ADDER_16BIT
                      64             
0204 80FE             65     HERE:SJMP HERE
                      66     END
                             
A51 MACRO ASSEMBLER  TEMPLATE_ADDER                                                       08/12/2019 15:18:34 PAGE     3

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

ADDER_16BIT. . . .  C ADDR   0050H   A   
B. . . . . . . . .  D ADDR   00F0H   A   
HERE . . . . . . .  C ADDR   0204H   A   
INIT . . . . . . .  C ADDR   0064H   A   
MAIN . . . . . . .  C ADDR   0200H   A   
SAVE . . . . . . .    ----   -----       


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 1 ERROR(S)
